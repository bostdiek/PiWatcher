name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies from pyproject.toml
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q

  build:
    runs-on: self-hosted
    needs: test
    strategy:
      matrix:
        python-version: [3.9.21, 3.10.16, 3.11.11]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies from pyproject.toml
        run: |
          python -m pip install --upgrade pip


      - name: Build the package
        run: |
          poetry build

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v2
        with:
          name: python-wheels
          path: piwatcher/base/dist/*.whl

  docker-build:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Build Docker image for base
        run: |
          docker build -t piwatcher_base piwatcher/base/

      - name: Save Docker image
        run: |
          docker save piwatcher_base > piwatcher_base.tar
          actions/upload-artifact@v2:
            name: piwatcher_base_image
            path: piwatcher_base.tar
