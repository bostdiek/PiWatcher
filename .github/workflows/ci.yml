name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies from pyproject.toml
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-interaction --with dev  # Ensures dev dependencies like pytest are installed

      - name: Run tests with coverage
        working-directory: piwatcher/base
        run: |
          poetry run pytest --cov=piwatcher_base --cov-report=xml

  build:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies for build
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          # Install only runtime dependencies (omit --with dev if not needed)
          poetry install --no-interaction

      - name: Build the package
        run: |
          cd piwatcher/base
          poetry build

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-wheels--${{ matrix.python-version }}-${{ github.run_id }}
          path: piwatcher/base/dist/*.whl
          if-no-files-found: warn
          compression-level: 6
          overwrite: true
          include-hidden-files: false

  # docker_build:
  #     runs-on: ubuntu-latest
  #     needs: build
  #     steps:
  #       - name: Check out repository
  #         uses: actions/checkout@v2

  #       - name: Build Docker image
  #         run: |
  #           cd piwatcher/base
  #           docker build -t piwatcher:latest .

  #       - name: Push Docker image (optional)
  #         run: |
  #           docker push piwatcher:latest
